<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Pwn - Tag - Kur0&#39;s blog</title>
        <link>http://localhost:1313/tags/pwn/</link>
        <description>Pwn - Tag - Kur0&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 30 Aug 2020 12:22:52 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/pwn/" rel="self" type="application/rss+xml" /><item>
    <title>NTU STCS 2016 0x04 Format String</title>
    <link>http://localhost:1313/ntu-stcs-2016-w6/</link>
    <pubDate>Sun, 30 Aug 2020 12:22:52 &#43;0000</pubDate>
    <author>Kur0</author>
    <guid>http://localhost:1313/ntu-stcs-2016-w6/</guid>
    <description><![CDATA[<h1 id="format-string">Format String</h1>
<ul>
<li><em>在输出火字符串处理函数中用来表示输出的字符串格式</em></li>
<li><em>在以下的&quot;%s %d&quot;即为format string</em></li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%s %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&#34;%s %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">sprintf</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="s">&#34;%s %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span></span></span></code></pre></div></div><h2 id="format-string-vulnerablility">Format String Vulnerablility</h2>
<ul>
<li><em>错误的使用方式，直接将使用者的输入作为fmt使用</em></li>
<li><em>将printf(&quot;%s&quot;, str)，写成gets(str);printf(str);</em></li>
<li><em>此类错误不易发现，因为如果没有测试特殊input执行结果不变</em></li>
</ul>
<h2 id="fmt使用方式">fmt使用方式</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%2$*1$d&#34;</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">num</span><span class="p">);</span></span></span></code></pre></div></div><ul>
<li><em>%2$制定要以%d输出的是第几个参数</em></li>
<li><em>1$制定要作为输出的长度是第几个参数</em></li>
<li><em>width = 10,num = 5时相当于printf(&quot;%10d&quot;, 5)</em></li>
</ul>
<p></p>]]></description>
</item>
<item>
    <title>NTU STCS 2016 0x03 ROP2</title>
    <link>http://localhost:1313/ntu-stcs-2016-w5/</link>
    <pubDate>Sat, 29 Aug 2020 16:31:45 &#43;0000</pubDate>
    <author>Kur0</author>
    <guid>http://localhost:1313/ntu-stcs-2016-w5/</guid>
    <description><![CDATA[<h1 id="ret2syscall">ret2syscall</h1>
<ul>
<li><em>跳.plt entry</em></li>
<li><em>函数参数直接放到接下来的stack</em></li>
<li><em>用pop-ret处理用过的参数</em></li>
</ul>
<p></p>
<h1 id="ret2libc">ret2libc</h1>
<ul>
<li><em>printf,gets,puts等函数所在位置:libc.so.6</em></li>
<li><em>直接用rop call libc 的system</em></li>
<li><em>用条件</em>
<ul>
<li><em>libc版本或者fuction的offset已知</em></li>
<li><em>ASLR开启情况</em></li>
</ul>
</li>
</ul>
<p><strong>Dynamically Linded Elf 动态链接库相关操作</strong></p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 获取libc路径</span>
</span></span><span class="line"><span class="cl">ldd ./binary
</span></span><span class="line"><span class="cl"><span class="c1"># 查看libc中的相对位置</span>
</span></span><span class="line"><span class="cl"><span class="c1"># trick 使用 | grep &#39; system@&#39;来查看想找的symbol</span>
</span></span><span class="line"><span class="cl">readelf -s /lib32/libc.so.6 <span class="p">|</span> grep <span class="s1">&#39; system@&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 指定加载的libc位置</span>
</span></span><span class="line"><span class="cl"><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>./path/to/libc</span></span></code></pre></div></div><p><strong>Function Lazy Binding</strong></p>
<p><em>library在binary执行时才加载，第一次call function时解析函数位置填入.got.plt</em></p>]]></description>
</item>
<item>
    <title>NTU STCS 2016 0x02 ROP</title>
    <link>http://localhost:1313/ntu-stcs-2016-w4/</link>
    <pubDate>Tue, 25 Aug 2020 16:46:26 &#43;0000</pubDate>
    <author>Kur0</author>
    <guid>http://localhost:1313/ntu-stcs-2016-w4/</guid>
    <description><![CDATA[<h1 id="gdbserver">gdbserver</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># in bash commandline</span>
</span></span><span class="line"><span class="cl">gdbserver 127.0.0.1:4000 ./binary <span class="c1">#break在entrypoint</span>
</span></span><span class="line"><span class="cl"><span class="c1"># in gdb commandline</span>
</span></span><span class="line"><span class="cl">gdb ./binary
</span></span><span class="line"><span class="cl">$ target remote 127.0.0.1:4000
</span></span><span class="line"><span class="cl">$ <span class="k">continue</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 搭配ncat</span>
</span></span><span class="line"><span class="cl">ncat -vc <span class="s1">&#39;gdbserver 127.0.0.1:4000 .binary&#39;</span> -kl 127.0.0.1 <span class="m">5000</span></span></span></code></pre></div></div><p><strong>trick</strong></p>
<p>使用gdbscript attach pid</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># .gdbinit</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> disassembly-flavor intel
</span></span><span class="line"><span class="cl">define at
</span></span><span class="line"><span class="cl">  shell <span class="nb">echo</span> attach <span class="k">$(</span>pidof -s <span class="nv">$arg0</span><span class="k">)</span> &gt; /tmp/foo.gdb
</span></span><span class="line"><span class="cl">  <span class="nb">source</span> /tmp/foo.gdb
</span></span><span class="line"><span class="cl">end</span></span></code></pre></div></div><hr>
<h1 id="rop">rop</h1>
<p>类型包括:ret2syscall ret2text ret2libc</p>]]></description>
</item>
<item>
    <title>NTU STCS 2016 0x01 Intro</title>
    <link>http://localhost:1313/ntu-stcs-2016-w3/</link>
    <pubDate>Sun, 23 Aug 2020 16:49:01 &#43;0000</pubDate>
    <author>Kur0</author>
    <guid>http://localhost:1313/ntu-stcs-2016-w3/</guid>
    <description><![CDATA[<!-- more -->
<h2 id="objdump">objdump</h2>
<p>常用指令</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">objdump -T binary
</span></span><span class="line"><span class="cl">cat /proc/<span class="sb">`</span>pidof binary<span class="sb">`</span>/maps</span></span></code></pre></div></div><h2 id="readelf">readelf</h2>
<p>分析elf binary header里的一些信息
readelf -a | grep STACK 看能否跑shellcode</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ readelf -a ./binary <span class="p">|</span> grep STACK
</span></span><span class="line"><span class="cl">  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10</span></span></code></pre></div></div><p><strong>trick</strong></p>]]></description>
</item>
</channel>
</rss>
